<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2023.1">
  <Nodes>
    <Node ToolID="1">
      <GuiSettings Plugin="JupyterCode">
        <Position x="318" y="306" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <WorkflowName>c:\github\alteryx-extended-developer-tools\development\macros\xml parser.yxmc</WorkflowName>
          <JupyterProduction>false</JupyterProduction>
          <vEnvName>designerbasetools_venv</vEnvName>
          <DefaultVenv>1</DefaultVenv>
          <productionModeScript />
          <Port>56940</Port>
          <JupyterGuidDir>a6729fc26518f0d4c8be60b7a86f73b6</JupyterGuidDir>
          <JupyterGuidCopy />
          <LastExecutedByEngineVersion>2021.3.3.63061</LastExecutedByEngineVersion>
          <Notebook><![CDATA[{"cells":[{"cell_type":"markdown","metadata":{"ayx":{"cell_class":"text_cell","cell_css":"border: 3px solid #357; margin: 4px; background: #fbffff","cell_type":"markdown","contents_keyword":"Alteryx.help()","first_line":"Run `Alteryx.help()` for info about useful functions.","label":"info"}},"source":["Run `Alteryx.help()` for info about useful functions.  \n","i.e., `Alteryx.read(\"#1\")`, `Alteryx.write(df,1)`, `Alteryx.getWorkflowConstant(\"Engine.WorkflowDirectory\")`"]},{"cell_type":"code","execution_count":1,"metadata":{"ayx":{"cell_class":"code_cell","cell_css":"border: 1px solid #58a; margin: 2px;","cell_type":"code","contents_keyword":"installPackages","first_line":"# List all non-standard packages to be imported by your","label":"deps"}},"outputs":[],"source":["# List all non-standard packages to be imported by your \n","# script here (only missing packages will be installed)\n","from ayx import Package\n","#Package.installPackages(['pandas','numpy'])"]},{"cell_type":"code","execution_count":2,"metadata":{},"outputs":[],"source":["from ayx import Alteryx\n","import xml.etree.ElementTree as Et\n","from collections import Counter\n","import pandas as pd\n","\n","period_escape_char = '&p;'\n"]},{"cell_type":"code","execution_count":3,"metadata":{},"outputs":[],"source":["def perf_func(id,elem, path):\n","    dict = xml_list_children_tag(elem)\n","    results = []\n","\n","    for name, value in elem.attrib.items():\n","        pathName = name.replace('.',period_escape_char)\n","        newPath = '{}.{}'.format(path, pathName)\n","        results.append((id,newPath,value, 'Attribute'))\n","\n","\n","    for tag, countTag in dict.items():\n","        i = 0\n","\n","        for child in elem.iterfind(tag):\n","            pathName = child.tag.replace('.',period_escape_char)\n","            if countTag == 1:\n","                newPath = '{}.{}'.format(path,pathName)\n","            else:\n","                newPath = '{}.{}.{}'.format(path,pathName,i)\n","            if child.text is not None and not child.text.isspace():\n","                results.append((id,newPath,child.text, 'Text'))\n","\n","            results = results + perf_func(id,child, newPath)\n","            i += 1\n","    return results\n","\n","def xml_list_children_tag(elem):\n","    return dict(Counter([child.tag for child in elem]))"]},{"cell_type":"code","execution_count":4,"metadata":{},"outputs":[],"source":["try:\n","    input_df = Alteryx.read('#1')\n","    temp = []\n","\n","    for index, row in input_df.iterrows():\n","        XML_ID = row['XML_ID']\n","        root= Et.fromstring(row['XML'])\n","        path = root.tag.replace('.',period_escape_char)\n","        temp = temp + perf_func(XML_ID,root,path)\n","\n","    output_df = pd.DataFrame(temp, columns=['XML_ID','XML_Name','XML_Value', 'XML_Type'])\n","    \n","    Alteryx.write(output_df,1)\n","    message = [('','', '','')]\n","except Et.ParseError as e:\n","    message = [('XML Parse error',e.msg, e.code,XML_ID)]\n","\n","columns = ['Name','Message', 'Code','XML_ID']\n","message_df = pd.DataFrame(message, columns=columns)\n","Alteryx.write(message_df,2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"designerbasetools_venv","language":"python","name":"designerbasetools_venv"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"nbformat":4,"nbformat_minor":2}]]></Notebook>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output1">
          <RecordInfo>
            <Field name="XML_ID" source="PythonTool:" type="Int64" />
            <Field name="XML_Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_Value" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_Type" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Output2">
          <RecordInfo>
            <Field name="Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Message" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Code" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_ID" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxJupyterPluginEngine.dll" EngineDllEntryPoint="AlteryxJupyter" />
    </Node>
    <Node ToolID="2">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="54" y="306" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Input</Name>
          <Abbrev>I</Abbrev>
          <ShowFieldMap value="True" />
          <Optional value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="1" />
              <Fields>
                <Field name="XML" />
              </Fields>
              <Data>
                <r>
                  <c>&lt;?xml version="1.0"?&gt;
&lt;AlteryxDocument yxmdVer="2021.2"&gt;
  &lt;Nodes&gt;
    &lt;Node Tool.ID="1"&gt;
      &lt;GuiSettings Plugin="JupyterCode"&gt;
        &lt;Position x="426" y="186" /&gt;
      &lt;/GuiSettings&gt;
      &lt;Properties&gt;
        &lt;Configuration&gt;
          &lt;WorkflowName&gt;c:\users\jonathoncavalieri\onedrive - mip (aust) pty ltd\work\20210722 - alteryx parse\python.yxmd&lt;/WorkflowName&gt;
          &lt;JupyterProduction&gt;false&lt;/JupyterProduction&gt;
          &lt;vEnvName&gt;designerbasetools_venv&lt;/vEnvName&gt;
          &lt;DefaultVenv&gt;1&lt;/DefaultVenv&gt;
          &lt;productionModeScript /&gt;
          &lt;Port&gt;60198&lt;/Port&gt;
          &lt;JupyterGuidDir&gt;0acada85270415a381615760d732c48b&lt;/JupyterGuidDir&gt;
          &lt;JupyterGuidCopy /&gt;
          &lt;LastExecutedByEngineVersion&gt;*&lt;/LastExecutedByEngineVersion&gt;
          &lt;/Configuration&gt;
        &lt;Annotation DisplayMode="0"&gt;
          &lt;Name /&gt;
          &lt;DefaultAnnotationText /&gt;
          &lt;Left value="False" /&gt;
        &lt;/Annotation&gt;
      &lt;/Properties&gt;
      &lt;EngineSettings EngineDll="AlteryxJupyterPluginEngine.dll" EngineDllEntryPoint="AlteryxJupyter" /&gt;
    &lt;/Node&gt;
  &lt;/Nodes&gt;
  &lt;Connections /&gt;
  &lt;Properties&gt;
    &lt;Memory default="True" /&gt;
    &lt;GlobalRecordLimit value="0" /&gt;
    &lt;TempFiles default="True" /&gt;
    &lt;Annotation on="True" includeToolName="False" /&gt;
    &lt;ConvErrorLimit value="10" /&gt;
    &lt;ConvErrorLimit_Stop value="False" /&gt;
    &lt;CancelOnError value="False" /&gt;
    &lt;DisableBrowse value="False" /&gt;
    &lt;EnablePerformanceProfiling value="False" /&gt;
    &lt;PredictiveToolsCodePage value="1252" /&gt;
    &lt;DisableAllOutput value="False" /&gt;
    &lt;ShowAllMacroMessages value="False" /&gt;
    &lt;ShowConnectionStatusIsOn value="True" /&gt;
    &lt;ShowConnectionStatusOnlyWhenRunning value="True" /&gt;
    &lt;ZoomLevel value="0" /&gt;
    &lt;LayoutType&gt;Horizontal&lt;/LayoutType&gt;
    &lt;MetaInfo&gt;
      &lt;NameIsFileName value="True" /&gt;
      &lt;Name&gt;Python&lt;/Name&gt;
      &lt;Description /&gt;
      &lt;RootToolName /&gt;
      &lt;ToolVersion /&gt;
      &lt;ToolInDb value="False" /&gt;
      &lt;CategoryName /&gt;
      &lt;SearchTags /&gt;
      &lt;Author /&gt;
      &lt;Company /&gt;
      &lt;Copyright /&gt;
      &lt;DescriptionLink actual="" displayed="" /&gt;
      &lt;Example&gt;
        &lt;Description /&gt;
        &lt;File /&gt;
      &lt;/Example&gt;
      &lt;WorkflowId value="c3a2203d-7e44-41b5-99be-b47a96568fad" /&gt;
      &lt;Telemetry&gt;
        &lt;PreviousWorkflowId value="b3c4a65d-d253-4414-a3a7-3db24c22b95d" /&gt;
        &lt;OriginWorkflowId value="c3a2203d-7e44-41b5-99be-b47a96568fad" /&gt;
      &lt;/Telemetry&gt;
    &lt;/MetaInfo&gt;
    &lt;Events&gt;
      &lt;Enabled value="True" /&gt;
    &lt;/Events&gt;
  &lt;/Properties&gt;
&lt;/AlteryxDocument&gt;</c>
                </r>
              </Data>
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>I Input</DefaultAnnotationText>
          <Left value="True" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="XML" size="2523" source="TextInput:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
    <Node ToolID="3">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RecordID.RecordID">
        <Position x="198" y="306" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FieldName>XML_ID</FieldName>
          <StartValue>1</StartValue>
          <FieldType>Int32</FieldType>
          <FieldSize>6</FieldSize>
          <Position>0</Position>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="XML_ID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="XML" size="2523" source="TextInput:" type="V_String" />
          </RecordInfo>
          <SortInfo>
            <Field field="XML_ID" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRecordID" />
    </Node>
    <Node ToolID="4">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="0" y="0" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="10">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Message.Message">
        <Position x="582" y="414" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <When>Filter</When>
          <Filter>1=1</Filter>
          <Type>Error</Type>
          <Priority>High</Priority>
          <Transient>False</Transient>
          <MessageExpression>'Record: '+[XML_ID]+' - Code: '+[Code]+' - '+[Name] + ' - Message: ' + [Message]</MessageExpression>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Message" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Code" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_ID" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMessage" />
    </Node>
    <Node ToolID="14">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="582" y="234" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>DATA_OUT</Name>
          <Abbrev>D</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>D Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="15">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="582" y="306" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>XML_OUT</Name>
          <Abbrev>X</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>X Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="16">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="486" y="414" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>IsNotEmpty</Operator>
            <Field>Message</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2022-01-12 17:09:35</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>
              </Operand>
              <StartDate>2022-01-12 17:09:35</StartDate>
              <EndDate>2022-01-12 17:09:35</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>!IsEmpty([Message])</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Message" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Code" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_ID" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Message" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Code" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_ID" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="17">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="390" y="414" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="Name" selected="True" type="V_WString" forced="True" size="1073741823" />
            <SelectField field="Message" selected="True" type="V_WString" forced="True" size="1073741823" />
            <SelectField field="Code" selected="True" type="V_WString" forced="True" size="1073741823" />
            <SelectField field="XML_ID" selected="True" type="V_WString" forced="True" size="1073741823" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Name" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Message" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="Code" size="1073741823" source="PythonTool:" type="V_WString" />
            <Field name="XML_ID" size="1073741823" source="PythonTool:" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="18">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.TextBox.QuestionTextBox">
        <Position x="318" y="54" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Text Box (18)</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="19">
      <GuiSettings Plugin="AlteryxGuiToolkit.Action.Action">
        <Position x="318" y="162" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>Update Value</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
  </Nodes>
  <Connections>
    <Connection>
      <Origin ToolID="1" Connection="Output2" />
      <Destination ToolID="17" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="1" Connection="Output1" />
      <Destination ToolID="15" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="2" Connection="Output" />
      <Destination ToolID="3" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="3" Connection="Output" />
      <Destination ToolID="1" Connection="Input" />
    </Connection>
    <Connection name="#3">
      <Origin ToolID="19" Connection="Action" />
      <Destination ToolID="1" Connection="Action" />
    </Connection>
    <Connection>
      <Origin ToolID="3" Connection="Output" />
      <Destination ToolID="14" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="16" Connection="True" />
      <Destination ToolID="10" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="17" Connection="Output" />
      <Destination ToolID="16" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="18" Connection="Question" />
      <Destination ToolID="19" Connection="Question" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <PredictiveToolsCodePage value="1252" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <Constants>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Text Box (18)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
    </Constants>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>XML Parser</Name>
      <Description>Parses entire XML tree, returning the values and path in format similar to JSON parse tool. (requires python tool)</Description>
      <RootToolName>XML Parsing Macro</RootToolName>
      <ToolVersion>1</ToolVersion>
      <ToolInDb value="False" />
      <CategoryName>EDT Macros</CategoryName>
      <SearchTags>XML, Parsing, EDT</SearchTags>
      <Author>JonathonCavalieri</Author>
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
      <WorkflowId value="949eedcb-6728-434f-bbdb-971b798ca467" />
      <Telemetry>
        <PreviousWorkflowId value="0afd2e29-1759-4e30-89cd-9f8b4ebce9d2" />
        <OriginWorkflowId value="bc5a6503-154d-4745-9639-85d4163796ee" />
      </Telemetry>
      <PlatformWorkflowId value="" />
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
    <RuntimeProperties>
      <Actions>
        <NoCondition>
          <Type>NoCondition</Type>
          <Description>(Always Run)</Description>
          <True>
            <Action>
              <Type>UpdateValue</Type>
              <Description />
              <ToolId value="19" />
              <Mode>Simple</Mode>
              <Variable />
              <Replace value="True" />
              <ReplaceText>&amp;p;</ReplaceText>
              <Destination>1/Notebook</Destination>
            </Action>
          </True>
        </NoCondition>
      </Actions>
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (4)</Name>
          <ToolId value="4" />
          <Questions>
            <Question>
              <Type>MacroInput</Type>
              <Description />
              <Name>Macro Input (2)</Name>
              <ToolId value="2" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description>Macro Output (5)</Description>
              <Name>Macro Output (14)</Name>
              <ToolId value="14" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description>Macro Output (5)</Description>
              <Name>Macro Output (15)</Name>
              <ToolId value="15" />
            </Question>
            <Question>
              <Type>TextBox</Type>
              <Description>Period Escape Character</Description>
              <Name>Text Box (18)</Name>
              <ToolId value="18" />
              <Default>&amp;p;</Default>
              <Password value="False" />
              <Multiline value="False" />
              <Hidden value="False" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImage></MacroImage>
      <MacroInputs />
      <MacroOutputs />
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="2" Selected="True" />
        <Tool ToolId="14" Selected="True" />
        <Tool ToolId="15" Selected="True" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>